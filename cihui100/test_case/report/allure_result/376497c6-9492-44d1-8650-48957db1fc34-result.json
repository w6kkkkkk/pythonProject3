{"name": "test_01", "status": "broken", "statusDetails": {"message": "TypeError: not enough arguments for format string", "trace": "self = <run1.pageLogin object at 0x04BF9820>, ele_type = 'xpath'\nlocator = '//*[@id=\"userName\"]', numb = None\n\n    def test_element(self, ele_type='', locator='', numb=None):\n        '''\n        定位方法\n        :param ele_type: 类型\n        :param locator:\n        :return:\n        '''\n        try:\n            ele = None\n            self.ele = None\n            if ele_type == 'id':\n                ele = self.driver.find_element_by_id(locator)\n            elif ele_type == 'name':\n                ele = self.driver.find_element_by_name(locator)\n            elif ele_type == 'class_name':\n                ele = self.driver.find_element_by_class_name(locator)\n            elif ele_type == 'class_names':\n                ele = self.driver.find_elements_by_class_name(locator)\n            elif ele_type == 'tag_name':\n                ele = self.driver.find_element_by_tag_name(locator)\n            elif ele_type == 'css':\n                ele = self.driver.find_element_by_css_selector(locator)\n            elif ele_type == 'csss':\n                ele = self.driver.find_elements_by_css_selector(locator)\n            elif ele_type == 'xpath':\n>               ele = self.driver.find_element_by_xpath(locator)\nE               AttributeError: 'NoneType' object has no attribute 'find_element_by_xpath'\n\n..\\Key\\webkeyss.py:63: AttributeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_run.Test_abc object at 0x04BEDE20>\n\n    @pytest.mark.dependency(depends=['a'])\n    def test_01(self):\n        r = pageLogin()\n>       r.pk_X_click()\n\ntest_run.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\run1.py:38: in pk_X_click\n    self.click(a[0],a[1])\n..\\Key\\webkeyss.py:88: in click\n    ele = self.test_element(ele_type,locator)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <run1.pageLogin object at 0x04BF9820>, ele_type = 'xpath'\nlocator = '//*[@id=\"userName\"]', numb = None\n\n    def test_element(self, ele_type='', locator='', numb=None):\n        '''\n        定位方法\n        :param ele_type: 类型\n        :param locator:\n        :return:\n        '''\n        try:\n            ele = None\n            self.ele = None\n            if ele_type == 'id':\n                ele = self.driver.find_element_by_id(locator)\n            elif ele_type == 'name':\n                ele = self.driver.find_element_by_name(locator)\n            elif ele_type == 'class_name':\n                ele = self.driver.find_element_by_class_name(locator)\n            elif ele_type == 'class_names':\n                ele = self.driver.find_elements_by_class_name(locator)\n            elif ele_type == 'tag_name':\n                ele = self.driver.find_element_by_tag_name(locator)\n            elif ele_type == 'css':\n                ele = self.driver.find_element_by_css_selector(locator)\n            elif ele_type == 'csss':\n                ele = self.driver.find_elements_by_css_selector(locator)\n            elif ele_type == 'xpath':\n                ele = self.driver.find_element_by_xpath(locator)\n            elif ele_type == 'link_text':\n                ele = self.driver.find_element_by_link_text(locator)\n            elif ele_type == 'partial_link_text':\n                ele = self.driver.find_element_by_partial_link_text(locator)\n            elif ele_type == 'xpaths':\n                ele = self.driver.find_elements_by_xpath(locator)\n            self.ele = ele\n            return ele\n        except AttributeError:\n>           print('\"%s页面找到了%s元素\"'% locator)\nE           TypeError: not enough arguments for format string\n\n..\\Key\\webkeyss.py:73: TypeError"}, "start": 1647415122544, "stop": 1647415122544, "uuid": "d8186bdc-e88c-4b76-b12d-43a8bba662d3", "historyId": "2780b72e254925130eae4df94276026c", "testCaseId": "aeca2ad2dfe207ae47a35c1c0bdf2faa", "fullName": "cihui100.test_case.test_run.Test_abc#test_01", "labels": [{"name": "tag", "value": "dependency(depends=['a'])"}, {"name": "parentSuite", "value": "cihui100.test_case"}, {"name": "suite", "value": "test_run"}, {"name": "subSuite", "value": "Test_abc"}, {"name": "host", "value": "LAPTOP-JJF1LTFF"}, {"name": "thread", "value": "6300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "cihui100.test_case.test_run"}]}